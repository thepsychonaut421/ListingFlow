// This file is generated by Firebase Studio.
'use server';
/**
 * @fileOverview An AI agent for extracting technical specifications from product text.
 *
 * - findTechnicalSpecs - A function that extracts technical specs.
 * - FindTechnicalSpecsInput - The input type for the findTechnicalSpecs function.
 * - FindTechnicalSpecsOutput - The return type for the findTechnicalSpecs function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'zod';

const FindTechnicalSpecsInputSchema = z.object({
  productName: z.string().describe('The name/title of the product.'),
  description: z.string().optional().describe('The description of the product.'),
});
export type FindTechnicalSpecsInput = z.infer<typeof FindTechnicalSpecsInputSchema>;

const FindTechnicalSpecsOutputSchema = z.object({
   specs: z.any().describe('A key-value object of technical specifications found for the product. For example, {"Leistung": "600 W", "Material": "Edelstahl"}.'),
});
export type FindTechnicalSpecsOutput = z.infer<typeof FindTechnicalSpecsOutputSchema>;

export async function findTechnicalSpecs(input: FindTechnicalSpecsInput): Promise<FindTechnicalSpecsOutput> {
  return findTechnicalSpecsFlow(input);
}

const prompt = ai.definePrompt({
    name: 'findTechnicalSpecsPrompt',
    input: { schema: FindTechnicalSpecsInputSchema },
    output: { schema: FindTechnicalSpecsOutputSchema },
    prompt: `From the following product title and description, extract a JSON object containing the product's technical specifications.

The keys of the JSON object should be the specification name (e.g., "Brand", "Model", "Power", "Material", "Color", "Dimensions", "Weight") and the values should be the corresponding specification details.

If a specification is not mentioned, do not include it in the output. Extract as many relevant technical details as you can find. The output must be in German if the input is in German.

Title: {{{productName}}}
Description: {{{description}}}

Output only a single JSON object with the extracted specifications, with no extra text or explanations.
`,
});


const findTechnicalSpecsFlow = ai.defineFlow(
  {
    name: 'findTechnicalSpecsFlow',
    inputSchema: FindTechnicalSpecsInputSchema,
    outputSchema: FindTechnicalSpecsOutputSchema,
  },
  async (input) => {
    const { output } = await prompt(input);
    // Ensure the output conforms to the expected structure even if AI returns something unexpected.
    if (output && typeof output.specs === 'object' && output.specs !== null) {
      return { specs: output.specs };
    }
    return { specs: {} };
  }
);
